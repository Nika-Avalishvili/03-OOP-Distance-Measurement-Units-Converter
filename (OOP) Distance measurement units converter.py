# პროგრამის ინიციალიზაცია
print("\nგამარჯობა! \nეს არის მანძილის საზომი ერთეულების გადაანგარიშების პროგრამა. \nგთხოვთ მიჰყევით ინსტრუქციას.\n")


# საზომი ერთეულები რომლებზეც იმუშავებს სისტემა
measures = ['სანტიმეტრი','მეტრი','კილომეტრი','მილი']


# 1) ინტერაქტიულ რეჟიმში პროგრამა გვეკითხება რომელი საზომი ერთეული შეგვყავს (სანტიმეტრი? მეტრი? კილომეტრი თუ მილი?), მაგ. ავირჩიეთ კილომეტრი;
m1 = ''
while m1 not in measures:
    m1 = input(f'აირჩიეთ რომელი საზომი ერთეულის კონვერაცია გსურთ (სანტიმეტრი, მეტრი, კილომეტრი, მილი): ')
    if m1 not in measures:
        print("შეყვანილი ერთეული არასწორია!")
        continue


# 2) საზომი ერთეულის არჩევის შემდეგ შეგვყავს მისი რიცხვითი მნიშვნელობა, მაგ. 10;
check = True
while check:
    try:
        num = float(input(f"შეიყვანეთ თქვენს მიერ არჩეული ერთეულის ({m1}) რიცხვითი მნიშვნელობა: "))
        check = False
    except:
        print("შეყვანილი რიცხვითი მნიშვნელობა არასწორია!")
        continue


# 3) პროგრამა ისევ გვეკითხება რომელ საზომ ერთეულში გვსურს ზემოთაღნიშნული მნიშვნელობის დაკონვერტირება, მაგ. ავირჩიეთ მილი;
m2 = ''
while m2 not in measures:
    m2 = input(f'აირჩიეთ რომელ საზომ ერთეულში გსურთ {m1}ს კონვერაცია (სანტიმეტრი, მეტრი, კილომეტრი, მილი): ')
    if m2 not in measures:
        print("შეყვანილი ერთეული არასწორია!")
        continue


# 4) ეკრანზე იბეჭდება: 10 კილომეტრი არის 6.21371 მილი;
class Converter:

    def __init__(self,measure1,unit,measure2):
        self.measure1 = measure1
        self.unit = unit
        self.measure2 = measure2

    def calculate(self):
        base_data = {"სანტიმეტრი":{"სანტიმეტრი":1,"მეტრი":0.01,"კილომეტრი":0.00001,"მილი":0.0000062137119224},
                    "მეტრი":{"სანტიმეტრი":100,"მეტრი":1,"კილომეტრი":0.001,"მილი":0.00062137119224},
                    "კილომეტრი":{"სანტიმეტრი":100000,"მეტრი":1000,"კილომეტრი":1,"მილი":0.62137119224},
                    "მილი":{"სანტიმეტრი":160934.4,"მეტრი":1609.344,"კილომეტრი":1.609344,"მილი":1}}
        return f'{self.unit} {self.measure1} არის {self.unit * base_data[self.measure1][self.measure2]} {self.measure2}'
        

user_data = Converter(m1,num,m2)
print(user_data.calculate())
